Text.tellraw(@a, "Spawn System Loaded");


// Run Every Tick
function __tick__() {
root();

// Count the bots - MOVED TO THE INGAME CMB SYSTEM
// execute store result score botscount nn_spawn run execute if entity @e[type=!player,tag=nextbot];


// Only run spawn system if its enabled
if (nn_spawn:disable = 0) {

    if (nn_spawn:botscount >= nn_spawn:maxbots) {
        scoreboard players set idle nn_spawn 0;
    } else {
        map_detect();
    }}

if (nn_lobby:started = 1) {
timer_msec();
}}



// Bossbar & Entity Stuff
function root() {

    //Detect if round has started
    if (nn_lobby:phase = 5) {
    // Call Play Music on round start
        map_music();
    // check if minutes are not less than 0
      if (nn_lobby:min >= numbers:0) {
        // Set the bossbar stuff
         bossbar set minecraft:game name [
          {"score":{"name":"min","objective":"nn_lobby"},"color":"yellow"},
          {"text":":","color":"yellow"},{"score":{"name":"sec","objective":"nn_lobby"},"color":"yellow"},
          {"text":" |","color":"dark_gray"},{"text":" Playing ","color":"aqua"},{"storage":"nnb_spawnsystem:temp","nbt":"map","color":"gold"}];

}}}



// Basic Timer Stuff

function timer_msec() {
if (nn_lobby:prepare = 0) {
    scoreboard players remove msec nn_lobby 1;
    }

if (nn_lobby:msec <= numbers:20) {
    scoreboard players set msec nn_lobby 0;
    scoreboard players remove sec nn_lobby 1;
    timer_sec();
    }}



function timer_sec() {
    if (nn_lobby:sec <= numbers:0) {
    scoreboard players set sec nn_lobby 59;
    scoreboard players remove min nn_lobby 1;
    }
    
if (nn_lobby:phase = 5) {
    if (nn_lobby:min < numbers:0) {
        scoreboard players set end nn_lobby 1;
}}}





// Music function
function map_music() {

        scoreboard players add tick nn_map_music 1;

        if (nn_map_music:tick > nn_map_music:reset) {
        play_music() with storage nnb_spawnsystem:music;
        scoreboard players set tick nn_map_music 0;
        }
        
}

// Play Music
function play_music() {
        $execute at @a run playsound vibecraft:$(m_name) weather @p ~ ~ ~ 0.1 1;
    }











// Detect maps
function map_detect() {
switch(nn_map:map) {
    case 1: 
        call_bots(sel_map="nn_mall");

        data modify storage nnb_spawnsystem:music m_name set value nn_mall_ambient;
        scoreboard players set reset nn_map_music 2900;
    case 2: 
        call_bots(sel_map="nn_poolrooms");

        data modify storage nnb_spawnsystem:music m_name set value nn_port_ambient;
        scoreboard players set reset nn_map_music 1620;
    case 3: 
        call_bots(sel_map="nn_port");

        data modify storage nnb_spawnsystem:music m_name set value nn_port_ambient;
        scoreboard players set reset nn_map_music 1620;
    case 4: 
        call_bots(sel_map="nn_camberturn");

        data modify storage nnb_spawnsystem:music m_name set value nn_camberturn_ambient;
        scoreboard players set reset nn_map_music 2440;
    case 5: 
        call_bots(sel_map="nn_crossroads");

        data modify storage nnb_spawnsystem:music m_name set value nn_crossroads_ambient;
        scoreboard players set reset nn_map_music 3520;
    case 6: 
        call_bots(sel_map="nn_russia");
        
        data modify storage nnb_spawnsystem:music m_name set value nn_russia_ambient;
        scoreboard players set reset nn_map_music 3000;
    case 7: 
        call_bots(sel_map="nn_trainstation");
    case 8: 
        call_bots(sel_map="nn_fungle");
    case 9: 
        call_bots(sel_map="nn_hotel");
    case 10: 
        call_bots(sel_map="nn_hauntedmansion");
    case 11: 
        call_bots(sel_map="nn_habitablezone");
    case 12: 
        call_bots(sel_map="nn_doomspire");
    case 13: 
        call_bots(sel_map="nn_crossroads_c");
    case 14: 
        call_bots(sel_map="nn_topmodernhouse");
    case 15: 
        call_bots(sel_map="nn_abandonedoffice");
    case 16:
        call_bots(sel_map="nn_flatgrass_arcade");
    case 17:
        call_bots(sel_map="nn_pillars");
   // default:
   //     say "Unable to find anything";
   }
}


//Spawn Bots based on map stuff
function call_bots() {
    // Set the "map" value from $(sel_map)
    $data modify storage nnb_spawnsystem:temp map set value $(sel_map);
    // Get the value from the scoreboard (in this case spawn nn_spawn)
    execute store result storage nnb_spawnsystem:temp id int 1 run scoreboard players get spawn nn_spawn;
    // Get the global limit
    execute store result storage nnb_spawnsystem:temp limit int 1 run scoreboard players get random_r nn_spawn;

    // Basic Switch Action
    switch (nn_spawn:spawn) {
        case 1:
            data modify storage nnb_spawnsystem:temp bot_name set value "metal_pipe";
        case 2:
            data modify storage nnb_spawnsystem:temp bot_name set value "toob";
        case 3:
            data modify storage nnb_spawnsystem:temp bot_name set value "crying_sans";
        case 4:
            data modify storage nnb_spawnsystem:temp bot_name set value "pbj";
        case 5:
            data modify storage nnb_spawnsystem:temp bot_name set value "smile_ghost";
        case 6:
            data modify storage nnb_spawnsystem:temp bot_name set value "idiot";
        case 7:
            data modify storage nnb_spawnsystem:temp bot_name set value "ohl";
        case 8:
            data modify storage nnb_spawnsystem:temp bot_name set value "meem";
        case 9:
            data modify storage nnb_spawnsystem:temp bot_name set value "nope";
        case 10:
            data modify storage nnb_spawnsystem:temp bot_name set value "noob";
        case 11:
            data modify storage nnb_spawnsystem:temp bot_name set value "observer";
        case 12:
            data modify storage nnb_spawnsystem:temp bot_name set value "benny";
        case 13:
            data modify storage nnb_spawnsystem:temp bot_name set value "racoon";
        case 14:
            data modify storage nnb_spawnsystem:temp bot_name set value "fazmug";
        case 15:
            data modify storage nnb_spawnsystem:temp bot_name set value "donot";
        case 16:
            data modify storage nnb_spawnsystem:temp bot_name set value "bear5";
        case 17:
            data modify storage nnb_spawnsystem:temp bot_name set value "blabber";
        case 18:
            data modify storage nnb_spawnsystem:temp bot_name set value "chilly";
        case 19:
            data modify storage nnb_spawnsystem:temp bot_name set value "smurf_cat";
        case 20:
            data modify storage nnb_spawnsystem:temp bot_name set value "intruder";
        case 21:
            data modify storage nnb_spawnsystem:temp bot_name set value "jet";
        case 22:
            data modify storage nnb_spawnsystem:temp bot_name set value "darkness";
        case 23:
            data modify storage nnb_spawnsystem:temp bot_name set value "bear";
        case 24:
            data modify storage nnb_spawnsystem:temp bot_name set value "litlle_gerry";
        case 25:
            data modify storage nnb_spawnsystem:temp bot_name set value "winrar";
        case 26:
            data modify storage nnb_spawnsystem:temp bot_name set value "fan";
        case 27:
            data modify storage nnb_spawnsystem:temp bot_name set value "boykisser";
        case 28:
            data modify storage nnb_spawnsystem:temp bot_name set value "subspace_tripmine";
        // case 29:
        //    data modify storage nnb_spawnsystem:temp bot_name set value "nothing";
        case 30:
            data modify storage nnb_spawnsystem:temp bot_name set value "nuke";
        case 31:
            data modify storage nnb_spawnsystem:temp bot_name set value "flash";
        case 32:
            data modify storage nnb_spawnsystem:temp bot_name set value "osc";
        case 33:
            data modify storage nnb_spawnsystem:temp bot_name set value "cb";
        case 34:
            data modify storage nnb_spawnsystem:temp bot_name set value "dragon";
        case 35:
            data modify storage nnb_spawnsystem:temp bot_name set value "carter";
        case 36:
            data modify storage nnb_spawnsystem:temp bot_name set value "shroom";
        case 37:
            data modify storage nnb_spawnsystem:temp bot_name set value "grumbo";
        case 38:
            data modify storage nnb_spawnsystem:temp bot_name set value "giggle";
        case 39:
            data modify storage nnb_spawnsystem:temp bot_name set value "rei";
        case 40:
            data modify storage nnb_spawnsystem:temp bot_name set value "ico";
        case 41:
            data modify storage nnb_spawnsystem:temp bot_name set value "leorio";
        case 42:
            data modify storage nnb_spawnsystem:temp bot_name set value "mohu";
        case 43:
            data modify storage nnb_spawnsystem:temp bot_name set value "jack";
        case 44:
            data modify storage nnb_spawnsystem:temp bot_name set value "unfortunate";
        case 45:
            data modify storage nnb_spawnsystem:temp bot_name set value "lolguy";
        case 46:
            data modify storage nnb_spawnsystem:temp bot_name set value "smiler";
        case 47:
            data modify storage nnb_spawnsystem:temp bot_name set value "boba";
        case 48:
            data modify storage nnb_spawnsystem:temp bot_name set value "squewe";
        case 49:
            data modify storage nnb_spawnsystem:temp bot_name set value "ccat";
        case 50:
            data modify storage nnb_spawnsystem:temp bot_name set value "andy";
        case 51:
            data modify storage nnb_spawnsystem:temp bot_name set value "inhabitant";
        case 52:
            data modify storage nnb_spawnsystem:temp bot_name set value "leoret";
        case 53:
            data modify storage nnb_spawnsystem:temp bot_name set value "dread";
        case 54:
            data modify storage nnb_spawnsystem:temp bot_name set value "catnap";
        case 55:
            data modify storage nnb_spawnsystem:temp bot_name set value "mrl";
        case 56:
            data modify storage nnb_spawnsystem:temp bot_name set value "trespasser";
        case 57:
            data modify storage nnb_spawnsystem:temp bot_name set value "anim8or";
        case 58:
            data modify storage nnb_spawnsystem:temp bot_name set value "pool_noodle";
}
// Call the universal spawn bot function
scoreboard players remove ticks nn_spawn 1;
if (nn_spawn:ticks < 10) {
    setup_bots() with storage nnb_spawnsystem:temp;
}}

// Universal spawn bot stuff
function setup_bots() {
    // Prevent spawning w.i.p.
    if (nn_spawn:spawn = 29) {
        scoreboard players set spawn nn_spawn 0;
    }
    // Clear bugged bots
    clear_bugged();
    // Spawn stuff
    $execute unless entity @e[tag=$(bot_name)] run scoreboard players set spawn nn_nextbot_spawn $(id);

    // Delay the teleportation stuff
    if (nn_spawn:ticks < 3) {
        tp_bots() with storage nnb_spawnsystem:temp;

}}

// TP Stuff
function tp_bots() {
    $tp @e[tag=$(bot_name)_z,tag=!done] @e[tag=$(map),limit=1,sort=random];
    $execute at @e[tag=$(bot_name)_z,tag=!done] run summon minecraft:lightning_bolt ~ ~ ~;
    $tag @e[tag=$(bot_name)_z,tag=!done] add done;
    $tellraw @a[tag=debug] {"text":"Spawned: $(bot_name) $(id) In: $(map)","color":"dark_gray"};
        
    data modify storage nnb_spawnsystem:temp bot_name set value "EMPTY_SKIPPED";
    $scoreboard players set ticks nn_spawn $(limit);
}






// Kill bugged entites
function clear_bugged() {
    execute at @e[type=minecraft:text_display,tag=!] unless entity @e[tag=nextbot,distance=..3.3] run kill @e[type=minecraft:text_display,distance=..2.2,limit=1,tag=!dep_tag,tag=!button_tag,tag=!preview_1,tag=!preview_2,tag=!preview_3];
    execute at @e[type=minecraft:item_display,tag=!] unless entity @e[tag=nextbot,distance=..3.3] run kill @e[type=minecraft:item_display,distance=..2.2,limit=1,tag=!spawn_marker,tag=!bonus,tag=!cosmetic];

    execute at @e[type=!player,tag=nextbot] run execute unless entity @e[type=minecraft:text_display,distance=..5.5] run kill @e[limit=1,distance=..1.1,sort=nearest,type=zombie];
    execute at @e[type=!player,tag=nextbot] run execute unless entity @e[type=minecraft:text_display,distance=..5.5] run kill @e[limit=1,distance=..1.1,sort=nearest,type=minecraft:spider];

}







function flashlight() {

execute at @a[nbt={SelectedItem:{id:"minecraft:torch",tag:{CustomModelData:1}}}] at @p run fill ~ ~ ~ ~ ~ ~ light[level=15] replace air;
execute at @a at @p run fill ~-2 ~-1 ~-2 ~2 ~1 ~2 air replace light;


}